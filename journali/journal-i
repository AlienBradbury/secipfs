#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

echo -e " ${PURPLE}   __     ______     __  __     ______     __   __     ______     __               __    ${NC}"
echo -e " ${PURPLE}  /\ \   /\  __ \   /\ \/\ \   /\     \   /\  -.\ \   /\  __ \   /\ \             /\ \   ${NC}"
echo -e " ${PURPLE} _\_\ \  \ \ \/\ \  \ \ \_\ \  \ \  __<   \ \ \-.  \  \ \  __ \  \ \ \____        \ \ \  ${NC}"
echo -e " ${PURPLE}/\_____\  \ \_____\  \ \_____\  \ \_\ \_\  \ \_\\ \_\   \ \_\ \_\  \ \_____\        \ \_\ ${NC}"
echo -e " ${PURPLE}\/_____/   \/_____/   \/_____/   \/_/ /_/   \/_/ \/_/   \/_/\/_/   \/_____/         \/_/ ${NC}"

echo -e "\n${PURPLE}by inverse alien${NC}"

if [ -z "$1" ]
  then
    echo -e "\n \nWelcome to ${PURPLE}journal-i${NC} tool for terminal. Use ${GREEN}journal-i -h${NC} for help".
fi

if [ -z "$2" ]
  then
    echo -e "\n \nApparently you forgot to specify the document! Oops"
fi

#help
if [ "$1" == "-h" ] || [ "$1" == "--help"  ]
then
  echo -e "\n \nThis is a tool for the ones who want to send documents through ipfs. If you want to know more about this protocol please visit https://ipfs.io/ ."
  echo -e "\n\n\t${PURPLE}journal-i -s document${NC} \n\tSending unencrypted documents to IPFS network. Instead of ${PURPLE}-s${NC} you can also use ${PURPLE}--shout${NC}"
  echo -e "\t${PURPLE}journal-i -w document -p password ${NC} \n\tSending encrypted documents to IPFS network. Instead of ${PURPLE}-w${NC} you can use ${PURPLE}--whisper${NC}"
  echo -e "\t${PURPLE}journal-i -l hash -p password -o output_file${NC} \n\tListen to encrypted documents got from IPFS using a passphrase. Instead of ${PURPLE}-l${NC} you can use ${PURPLE}--listen${NC}"

#whisper
elif [ "$1" == "-w" ] || [ "$1" == "--whisper"  ]
then

  #check if password was selected
  if [ -z "$3" ] || [ -z "$4" ]
    then
      echo -e "\n \nApparently you forgot to specify the password! Oops"
  fi
  if [ "$3" == "-p" ]
  then

    #advisory
    echo -e "\nAre you sure that you want to send it? remember, you wont be able to delete it later. "
    read -p"Write 'Yes I am aware' if agree: " SURE

    if [ "$SURE" == "Yes I am aware" ]
    then
      #aes encrypt woth password
      echo "You agreed. Uploading, please wait..."
      gpg --output remove --passphrase $4 --batch --no-tty --symmetric $2
      #ipfs add remove
      echo -e "${BLUE}Uploaded to ipfs${NC}"
      #rm remove
      echo "Done."
    else
      echo "You didn't write the correct agreeing phrase (or didn't agreed!). Try again."
    fi
  else
    echo "Password command invalid"
  fi

#shout
elif [ "$1" == "-s" ] || [ "$1" == "--shout" ]
then
  #advisory
  echo -e "\nAre you sure that you want to send it? remember, you wont be able to delete it later. "
  read -p"Write 'Yes I am aware' if agree: " SURE

  if [ "$SURE" == "Yes I am aware" ]
  then
    #aes encrypt woth password
    echo "You agreed. Uploading, please wait..."
    #ipfs add $2
    echo -e "${BLUE}Uploaded to ipfs${NC}"
    echo "Done."
  else
    echo "You didn't write the correct agreeing phrase (or didn't agreed!). Try again."
  fi

#listen with password
elif [ "$1" == "-l" ] || [ "$1" == "--listen"  ]
then
  if [ -z "$3" ] || [ -z "$4" ]
    then
      echo -e "\n \nApparently you forgot to specify the password! Oops"
  fi

  #check if password command is valid
  if [ "$3" == "-p" ]
  then
    #if output not defined
    if [ -z "$6" ] || [ -z "$5" ]
    then
      echo -e "\nOutput not defined"
    else
      #gpg decrypt aes
      gpg --output $6 --passphrase $4 --batch --no-tty --decrypt $2
      echo -e "${PURPLE}Done. Showing it:${NC}\n"
      cat $6
    fi
  else
    echo "Password command invalid"
  fi

fi
